# Query Refinement for Diverse Top-k Selection

## Structure

* Technical report is available at http://arxiv.org/abs/2403.17786
* Source code for implementation is in `ranking_refinements` folder
    * `fair.py` contains the key components of the implementation, and some example scenarios that may be run by evaluating the file

## Running the algorithm

* At the end of `fair.py`, there are a few example cases with various datasets
* Constraint sets are built by `Constraints(Constraint(Group(Attribute, Value), (K, Cardinality), sense='L' or 'U'), ...)`
* Queries are defined by `Ranking(SQL Query)` where the query has 
    (1) WHERE clause
    (2) ORDER BY clause
* Rankings may be refined subject to a set of constraints by `ranking.refine(constraints)`
    * `refine` has a few options, such as `max_deviation`, `method`, `opt`, etc...